name: Build Workflow

on:
  push:
    paths-ignore:
      - '.vscode'
      - 'README.md'
      - 'TODO.md'
  pull_request:
    paths-ignore:
      - '.vscode'
      - 'README.md'
      - 'TODO.md'
  release:
    types: [created]

env:
  HAXE_VERSION: 4.1.4

jobs:
  install-library:
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Cache haxelib (Linux)
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/haxelib
          key: haxelib-cache
        if: matrix.os == 'ubuntu-latest'

      - name: Cache haxelib (Windows)
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}\haxelib
          key: haxelib-cache
        if: matrix.os == 'windows-latest'

      - run: haxelib setup ${{ github.workspace }}/haxelib
        if: matrix.os == 'ubuntu-latest'

      - run: haxelib setup ${{ github.workspace }}\haxelib
        if: matrix.os == 'windows-latest'

      - name: Install library
        run: |
          haxe --version
          haxelib install openfl --always --quiet
          haxelib install lime --always --quiet
          haxelib git starling https://github.com/openfl/starling.git --always --quiet
          echo "y" | haxelib --always --quiet run openfl setup

####################################

  build-html5:
    needs: install-library
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Cache haxelib
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/haxelib
          key: haxelib-cache

      - name: Cache build file
        uses: actions/cache@v2
        with:
          path: Export/html5/bin
          key: build-html5-cache

      - name: "Compile"
        run: |
          haxelib setup ${{ github.workspace }}/haxelib
          haxelib run openfl build html5

      - name: "Upload artefact"
        uses: actions/upload-artifact@v2
        with:
          name: "html5"
          path: Export/html5/bin

####################################

  build-linux:
    needs: install-library
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["32", "64"]
    steps:
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Cache haxelib
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/haxelib
          key: haxelib-cache

      - name: Cache build file
        uses: actions/cache@v2
        with:
          path: Export/linux/bin
          key: build-linux-${{ matrix.arch }}-cache

      - name: "Install build tools"
        run: |
          sudo apt-get update
          sudo apt-get install build-essential g++-multilib -y
        if: matrix.arch == 32

      - name: "Compile"
        run: |
          haxelib setup ${{ github.workspace }}/haxelib
          haxelib run openfl build linux -${{ matrix.arch }}

      - name: "Upload artefact"
        uses: actions/upload-artifact@v2
        with:
          name: "linux_${{ matrix.os }}"
          path: Export/linux/bin

####################################

  build-windows:
    needs: install-library
    runs-on: windows-latest
    strategy:
      matrix:
        arch: ["32", "64"]
    steps:
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Cache haxelib
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}\haxelib
          key: haxelib-cache

      - name: Cache build file
        uses: actions/cache@v2
        with:
          path: Export/windows/bin
          key: build-windows-${{ matrix.arch }}-cache

      - name: "Compile"
        run: |
          haxelib setup ${{ github.workspace }}\haxelib
          haxelib run openfl build windows -${{ matrix.arch }}

      - name: "Upload artefact"
        uses: actions/upload-artifact@v2
        with:
          name: "windows_${{ matrix.arch }}"
          path: Export/windows/bin
